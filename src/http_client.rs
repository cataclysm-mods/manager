use hyper_tls::HttpsConnector;
use hyper::client::HttpConnector;
use hyper::Request;

pub type Client = hyper::Client<HttpsConnector<HttpConnector>, hyper::Body>;

pub fn build_client() -> Client {
    let https = HttpsConnector::new();
    let client = hyper::Client::builder()
        .build::<_, hyper::Body>(https);

    client
}

/// Build a new HTTP request
///
/// Request objects generated by this method have a number of defaults populated.
/// Default properties include:
///   * Headers:
///     * User-Agent
/// 
/// # Examples
/// ```
/// use cataclysm_manager::http_client::build_request;
/// let mut request = build_request();
/// assert!(request.headers_ref().unwrap().contains_key("User-Agent"));
/// ```
pub fn build_request() -> hyper::http::request::Builder {
    Request::builder().header("User-Agent", "cataclysm-mods/manager")
}

/// Build a new HTTP request for use against the Github v3 API
///
/// All new requests generated by this method inherit request properties
/// set by {build_request}.
/// 
/// Additionally, this method populates the request with additional properties:
///   * Headers:
///     * Accept
/// 
/// # Examples
/// ```
/// use cataclysm_manager::http_client::github_request;
/// let mut request = github_request();
/// assert!(request.headers_ref().unwrap().contains_key("Accept"));
/// ```
pub fn github_request() -> hyper::http::request::Builder {
    build_request().header("Accept", "application/vnd.github.v3+json")
}
